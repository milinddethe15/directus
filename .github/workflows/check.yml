name: Check

on:
  push:
    branches:
      - main
      - next
    paths-ignore:
      - docs/**
  pull_request:
    branches:
      - main
      - next

concurrency:
  group: check-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_OPTIONS: --max_old_space_size=6144

jobs:
  get-changed-files:
    name: Get Changed Files
    runs-on: ubuntu-latest
    outputs:
      changed-files: ${{ steps.set-output.outputs.files }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare
        uses: ./.github/actions/prepare

      - name: Get changed files
        id: set-output
        run: |
          echo "::set-env name=CHANGED_FILES::$(git diff --name-only ${{ github.base_ref }} ${{ github.head_ref }})" >> changed_files.txt
          echo "Changed files: $changed_files"
          echo "CHANGED_FILES=$(cat changed_files.txt)" >> $GITHUB_ENV
        shell: bash
  
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: get-changed-files
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && env.CHANGED_FILES != '')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare
        uses: ./.github/actions/prepare

      - name: Run Linter
        run: |
          changed_files=${{ env.CHANGED_FILES }}
          echo "Changed files: $changed_files"
          pnpm exec eslint $changed_files

        shell: bash

  format:
    name: Format
    runs-on: ubuntu-latest
    needs: get-changed-files
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && env.CHANGED_FILES != '')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare
        uses: ./.github/actions/prepare
        with:
          build: false

      - name: Run Formatter
        run: |
          changed_files=${{ env.CHANGED_FILES }}
          echo "Changed files: $changed_files"
          pnpm exec prettier --check $changed_files

        shell: bash

  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare
        uses: ./.github/actions/prepare

      - name: Run Tests
        run: pnpm test

  analyze:
    name: CodeQL Analysis
    uses: ./.github/workflows/codeql-analysis.yml
